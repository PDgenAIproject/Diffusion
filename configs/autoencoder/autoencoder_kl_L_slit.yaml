model:
  base_learning_rate: 4.5e-6
  target: ldm.models.autoencoder.AutoencoderKL
  params:
    monitor: "val/rec_loss"
    embed_dim: 4 #
    lossconfig:
      target: ldm.modules.losses.LPIPSWithDiscriminator
      params:
        disc_start: 50001
        kl_weight: 0.000001
        disc_weight: 0.5

    ddconfig:
      double_z: True
      z_channels: 4 #
      resolution: 256
      in_channels: 3
      out_ch: 3
      ch: 128
      ch_mult: [ 1,2,4,4]  # num_down = len(ch_mult)-1  #
      num_res_blocks: 2
      attn_resolutions: []  #
      dropout: 0.0

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 12  #
    num_workers: 0  #
    wrap: False  #
    train:
      target: ldm.data.L_slit.CustomTrain
      params:
        size: 256  #
        training_images_list_file: "/camin1/chlee/latent-diffusion-keratopathy/data/L_slit_train_index.txt"
    validation:
      target: ldm.data.L_slit.CustomVal  #
      params:
        size: 256
        val_images_list_file: "/camin1/chlee/latent-diffusion-keratopathy/data/L_slit_val_index.txt"
    test:
      target: ldm.data.L_slit.CustomTest  #
      params:
        size: 256
        test_images_list_file: "/camin1/chlee/latent-diffusion-keratopathy/data/L_slit_test_index.txt"

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000  #
        max_images: 8  #
        increase_log_steps: True
    early_stopping:                       # ✅ 추가
      target: pytorch_lightning.callbacks.EarlyStopping
      params:
        monitor: "val/rec_loss"          # 모델/체크포인트와 동일 지표
        mode: "min"                      # 손실은 낮을수록 좋음
        patience: 10                     # 10 epoch 개선 없으면 중지 (원하는 값으로)
        min_delta: 1.0e-4                # 개선으로 인정할 최소 변화량
        check_on_train_epoch_end: False  # 검증 끝난 뒤 체크
        verbose: True

  logger:
    target: pytorch_lightning.loggers.TensorBoardLogger
    params:
      save_dir: logs/L_slit
      name: L_slit
      version: ver1

  modelcheckpoint:
    target: pytorch_lightning.callbacks.ModelCheckpoint
    params:
      monitor: "val/rec_loss"
      dirpath: logs/L_slit/ver1
      filename: "{epoch:02d}"
      save_last: True
      save_top_k: -1
      mode: min
      every_n_epochs: 10

  trainer:
    benchmark: True
    max_epochs: 200
#    accumulate_grad_batches: 2  #
